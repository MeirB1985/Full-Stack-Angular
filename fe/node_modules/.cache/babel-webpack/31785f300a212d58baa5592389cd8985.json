{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/ThirdProject/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport CartModel from 'src/app/models/cart.model';\nimport ItemModel from 'src/app/models/item.model';\nimport store from 'src/app/redux/store';\nimport { environment } from 'src/environments/environment';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/carts.service\";\nimport * as i2 from \"src/app/services/orders.service\";\nimport * as i3 from \"src/app/services/items.service\";\nimport * as i4 from \"src/app/services/notify.service\";\nimport * as i5 from \"@angular/material/dialog\";\nexport class ProductCardComponent {\n  constructor(myCartsService, myOrdersService, myItemsService, notify, dialog) {\n    this.myCartsService = myCartsService;\n    this.myOrdersService = myOrdersService;\n    this.myItemsService = myItemsService;\n    this.notify = notify;\n    this.dialog = dialog;\n    this.item = new ItemModel();\n    this.imageUrl = environment.productImagesUrl;\n  } // ngOnInit(): void {\n  //   this.unsubscribeMe = store.subscribe(() => {\n  //       this.user = store.getState().authState.user;\n  //   });\n  // }\n  // ngOnDestroy(): void {\n  //     this.unsubscribeMe();\n  // }\n\n\n  openDialog() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // this.unsubscribeMe = store.subscribe(async () => {\n      _this.user = store.getState().authState.user;\n\n      if (_this.user.admin === true) {// console.log(\"noadmin\");  \n      } else {\n        try {\n          _this.carts = yield _this.myCartsService.getAllCarts(_this.user._id);\n        } catch (err) {\n          console.log(\"err getting user carts\");\n        }\n\n        console.log('The dialog was closed');\n        console.log(_this.carts);\n\n        let dialogRef = _this.dialog.open(DialogComponent, {\n          data: {\n            product: _this.product,\n            quantity: _this.quantity\n          }\n        });\n\n        dialogRef.afterClosed().subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (result) {\n            // this.user = store.getState().authState.user;\n            _this.quantity = result; // find out if user have an open cart or not\n\n            if (_this.carts === undefined || _this.carts === null) {\n              console.log(\"carts null\"); // there is no cart for this user-create one\n\n              _this.createCartAndAddItem();\n            } else {\n              try {\n                _this.orders = yield _this.myOrdersService.getAllUserOrders(_this.user._id);\n              } catch (err) {\n                console.log(\"err getting user orders\");\n              } // find out if user have some old order\n\n\n              if (_this.orders === undefined || _this.orders === null) {\n                console.log(\"there is an open cart for this user, but no orders in\"); // this.lastCartIndex = this.carts.length - 1;\n                // this.item.cart = this.carts[this.lastCartIndex];\n                // there is an open cart for this user, but no orders in it-add items to it\n\n                _this.addItemToOpenCart();\n              } else {\n                // this user have cart and order, check if he has an open cart or not\n                _this.lastCartIndex = _this.carts.length - 1;\n                _this.lastOrderIndex = _this.orders.length - 1;\n\n                if (_this.carts[_this.lastCartIndex]._id === _this.orders[_this.lastOrderIndex].cart._id) {\n                  console.log(\"user closed his last cart\"); // the user closed his last cart-create new one for him\n\n                  _this.createCartAndAddItem();\n                } else {\n                  console.log(\"there is an open cart\");\n                  _this.lastCartIndex = _this.carts.length - 1;\n                  _this.item.cart = _this.carts[_this.lastCartIndex]; // add item to user's new cart\n\n                  _this.addItemToOpenCart();\n                }\n              }\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  createCartAndAddItem() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.user = store.getState().authState.user;\n      _this2.newCart = new CartModel();\n      _this2.newCart.user = _this2.user;\n      _this2.newCart.date = new Date().toDateString();\n\n      try {\n        _this2.newCart = yield _this2.myCartsService.addCart(_this2.newCart);\n      } catch (err) {\n        console.log(\"problem creating cart\");\n      }\n\n      _this2.item = new ItemModel(); // console.log(this.newCart._id);\n\n      _this2.item.cart = _this2.newCart;\n      _this2.item.product = _this2.product;\n      console.log(_this2.item.product);\n      _this2.item.quantity = _this2.quantity;\n      _this2.item.price = _this2.product.price * _this2.quantity;\n\n      try {\n        _this2.item = yield _this2.myItemsService.addItem(_this2.item);\n      } catch (err) {\n        console.log(\"problem adding item to cart\");\n      }\n    })();\n  }\n\n  addItemToOpenCart() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.item = new ItemModel();\n      console.log(\"there's an open cart\");\n      _this3.lastCartIndex = _this3.carts.length - 1;\n      _this3.item.cart = _this3.carts[_this3.lastCartIndex];\n      console.log(_this3.item.cart);\n      _this3.item.product = _this3.product; // console.log(this.item.product); works\n\n      _this3.item.quantity = _this3.quantity;\n      _this3.item.price = _this3.product.price * _this3.quantity; // check if item allready exist on this cart-if so combine them\n      // this.user = store.getState().authState.user;\n      // try {\n      //   this.carts = await this.myCartsService.getAllCarts(this.user._id);\n      // }\n      // catch (err) {\n      //   console.log(\"err getting user carts\");\n      // }\n      // this.lastCartIndex = this.carts.length - 1;\n      // try {\n      //   this.items = await this.myItemsService.getAllItems(this.carts[this.lastCartIndex]._id);\n      // }\n      // catch (err) {\n      //       console.log(\"problem adding item to cart\");\n      // }\n      // for (let i of this.items) {\n      //   if (i.product.name === this.item.product.name) {\n      //   }\n      // }\n\n      try {\n        _this3.item = yield _this3.myItemsService.addItem(_this3.item);\n      } catch (err) {\n        console.log(\"problem adding item to cart\");\n      }\n\n      console.log(_this3.item);\n    })();\n  }\n\n  editProduct() {\n    if (this.user.admin === false) {\n      console.log(\"user\");\n    } else {}\n  }\n\n}\n\nProductCardComponent.ɵfac = function ProductCardComponent_Factory(t) {\n  return new (t || ProductCardComponent)(i0.ɵɵdirectiveInject(i1.CartsService), i0.ɵɵdirectiveInject(i2.OrdersService), i0.ɵɵdirectiveInject(i3.ItemsService), i0.ɵɵdirectiveInject(i4.NotifyService), i0.ɵɵdirectiveInject(i5.MatDialog));\n};\n\nProductCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductCardComponent,\n  selectors: [[\"app-product-card\"]],\n  inputs: {\n    product: \"product\"\n  },\n  decls: 6,\n  vars: 3,\n  consts: [[\"mat-raised-button\", \"\", 3, \"click\"], [3, \"src\"]],\n  template: function ProductCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function ProductCardComponent_Template_div_click_0_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelement(5, \"img\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.product.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" Price: \", ctx.product.price, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.imageUrl + ctx.product.imageName, i0.ɵɵsanitizeUrl);\n    }\n  },\n  styles: [\"div[_ngcontent-%COMP%] {\\r\\n\\twidth: 100px;\\r\\n    height: 100px;\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    align-items: center;\\r\\n    \\r\\n    padding: 0 10px;\\r\\n    \\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n    width: 60px;\\r\\n    height: 60px;\\r\\n    margin: 5px;\\r\\n    \\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsWUFBWTtJQUNULGFBQWE7SUFDYixxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixpRUFBaUU7SUFDakUsZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYOzhCQUMwQjtJQUMxQiw0QkFBNEI7QUFDaEM7O0FBRUE7O0dBRUciLCJmaWxlIjoicHJvZHVjdC1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xyXG5cdHdpZHRoOiAxMDBweDtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgLyogYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCBsaWdodGdyZWVuLCB3aGl0ZSk7ICovXHJcbiAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICAvKiBtYXJnaW46IDEwcHg7ICovXHJcbn1cclxuXHJcbmltZyB7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIGhlaWdodDogNjBweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gICAgLyogYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyAqL1xyXG4gICAgLyogdmVydGljYWwtYWxpZ246IG1pZGRsZTsgKi9cclxufVxyXG5cclxuLyogYSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxufSAqLyJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\ThirdProject\\fe\\src\\app\\components\\products-area\\product-card\\product-card.component.ts","C:\\Users\\user\\Desktop\\FullStack\\JB\\ThirdProject\\fe\\src\\app\\components\\products-area\\product-card\\product-card.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Unsubscribe } from 'redux';\nimport CartModel from 'src/app/models/cart.model';\nimport ItemModel from 'src/app/models/item.model';\nimport OrderModel from 'src/app/models/order.model';\nimport ProductModel from 'src/app/models/product.model';\nimport UserModel from 'src/app/models/user.model';\nimport store from 'src/app/redux/store';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { ItemsService } from 'src/app/services/items.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { OrdersService } from 'src/app/services/orders.service';\nimport { environment } from 'src/environments/environment';\nimport { DialogComponent } from '../dialog/dialog.component';\n\nexport interface DialogData {\n  product: ProductModel;\n  price: number;\n  name: string;\n  imageName: string;\n  quantity: number;\n}\n\n@Component({\n    selector: 'app-product-card',\n    templateUrl: './product-card.component.html',\n    styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n\n  public user: UserModel;\n  private unsubscribeMe: Unsubscribe;\n  \n  @Input()\n  public product: ProductModel;\n\n  public item = new ItemModel();\n  public items: ItemModel[];\n  public orders: OrderModel[];\n  public imageUrl = environment.productImagesUrl;\n  private carts: CartModel[];\n  private newCart: CartModel;\n  private cart: CartModel;\n  private lastCartIndex: number;\n  private lastOrderIndex: number;\n  public quantity: number;\n\n  constructor (\n      private myCartsService: CartsService,\n      private myOrdersService: OrdersService,\n      private myItemsService: ItemsService,\n      private notify: NotifyService,\n      public dialog: MatDialog\n  ) {}\n\n  // ngOnInit(): void {\n  //   this.unsubscribeMe = store.subscribe(() => {\n  //       this.user = store.getState().authState.user;\n  //   });\n  // }\n\n  // ngOnDestroy(): void {\n  //     this.unsubscribeMe();\n  // }\n\n  async openDialog() {\n    // this.unsubscribeMe = store.subscribe(async () => {\n    this.user = store.getState().authState.user;\n    if (this.user.admin === true) {\n      // console.log(\"noadmin\");  \n    } \n    else {\n      try {\n        this.carts = await this.myCartsService.getAllCarts(this.user._id);\n      }\n      catch (err) {\n        console.log(\"err getting user carts\");\n      }\n      console.log('The dialog was closed');\n      console.log(this.carts);\n      \n      let dialogRef = this.dialog.open(DialogComponent, {\n        data: {product: this.product, quantity: this.quantity},\n      });\n\n      dialogRef.afterClosed().subscribe( async result => {\n        // this.user = store.getState().authState.user;\n        this.quantity = result;\n        // find out if user have an open cart or not\n        if (this.carts === undefined || this.carts === null){\n          console.log(\"carts null\");\n          // there is no cart for this user-create one\n          this.createCartAndAddItem();\n        } else {\n          try {\n            this.orders = await this.myOrdersService.getAllUserOrders(this.user._id);\n          }\n          catch (err) {\n            console.log(\"err getting user orders\");\n          }\n          // find out if user have some old order\n          if (this.orders === undefined || this.orders === null) {\n            console.log(\"there is an open cart for this user, but no orders in\");\n            // this.lastCartIndex = this.carts.length - 1;\n            // this.item.cart = this.carts[this.lastCartIndex];\n            // there is an open cart for this user, but no orders in it-add items to it\n            this.addItemToOpenCart();\n          } else {\n            // this user have cart and order, check if he has an open cart or not\n            this.lastCartIndex = this.carts.length - 1;\n            this.lastOrderIndex = this.orders.length - 1;\n            if (this.carts[this.lastCartIndex]._id === this.orders[this.lastOrderIndex].cart._id) {\n              console.log(\"user closed his last cart\");\n              // the user closed his last cart-create new one for him\n              this.createCartAndAddItem(); \n            } else {\n              console.log(\"there is an open cart\")\n              this.lastCartIndex = this.carts.length - 1;\n              this.item.cart = this.carts[this.lastCartIndex];\n              // add item to user's new cart\n              this.addItemToOpenCart();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  async createCartAndAddItem() {\n    this.user = store.getState().authState.user;\n    this.newCart = new CartModel();\n    this.newCart.user = this.user;\n    this.newCart.date = new Date().toDateString();\n    try {\n      this.newCart = await this.myCartsService.addCart(this.newCart);\n    }\n    catch (err) {\n      console.log(\"problem creating cart\");\n    }\n    this.item = new ItemModel();\n    // console.log(this.newCart._id);\n    this.item.cart = this.newCart;\n    this.item.product = this.product;\n    console.log(this.item.product);\n    this.item.quantity = this.quantity;\n    this.item.price = this.product.price*this.quantity;\n    try {\n      this.item = await this.myItemsService.addItem(this.item);\n    }\n    catch (err) {\n          console.log(\"problem adding item to cart\");\n    }\n  }\n\n  async addItemToOpenCart() {\n    this.item = new ItemModel();\n    console.log(\"there's an open cart\");\n    this.lastCartIndex = this.carts.length -1;\n    this.item.cart = this.carts[this.lastCartIndex];\n    console.log(this.item.cart);\n    this.item.product = this.product;\n    // console.log(this.item.product); works\n    this.item.quantity = this.quantity;\n    this.item.price = this.product.price*this.quantity;\n\n\n    // check if item allready exist on this cart-if so combine them\n    // this.user = store.getState().authState.user;\n    // try {\n    //   this.carts = await this.myCartsService.getAllCarts(this.user._id);\n    // }\n    // catch (err) {\n    //   console.log(\"err getting user carts\");\n    // }\n    // this.lastCartIndex = this.carts.length - 1;\n    // try {\n    //   this.items = await this.myItemsService.getAllItems(this.carts[this.lastCartIndex]._id);\n    // }\n    // catch (err) {\n    //       console.log(\"problem adding item to cart\");\n    // }\n    // for (let i of this.items) {\n    //   if (i.product.name === this.item.product.name) {\n\n    //   }\n    // }\n\n\n\n    try {\n      this.item = await this.myItemsService.addItem(this.item);\n    }\n    catch (err) {\n          console.log(\"problem adding item to cart\");\n    }\n    console.log(this.item)\n  }\n\n  editProduct() {\n    if (this.user.admin===false) {\n      console.log(\"user\");\n    } else {\n      \n    }\n  }\n}\n\n\n","<div mat-raised-button (click)=\"openDialog()\">\n    {{product.name}}\n    <br />\n    Price: {{product.price}}\n    <br />\n    <img [src]=\"imageUrl + product.imageName\"/>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}