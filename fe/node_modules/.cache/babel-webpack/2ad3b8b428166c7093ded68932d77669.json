{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/Third Project/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport OrderModel from 'src/app/models/order.model';\nimport store from 'src/app/redux/store';\nimport { DialogComponent } from '../dialog/dialog.component';\nlet MyOrderComponent = class MyOrderComponent {\n  constructor(myCartsService, myOrdersService, myItemsService, notify, dialog, myRouter) {\n    this.myCartsService = myCartsService;\n    this.myOrdersService = myOrdersService;\n    this.myItemsService = myItemsService;\n    this.notify = notify;\n    this.dialog = dialog;\n    this.myRouter = myRouter;\n    this.order = new OrderModel();\n    this.today = new Date();\n\n    this.myFilter = d => {\n      const day = (d || new Date()).getDay();\n      return day !== 5 && day !== 6;\n    };\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    this.unsubscribeMe = store.subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.user = store.getState().authState.user;\n\n      try {\n        _this.carts = yield _this.myCartsService.getAllCarts(_this.user._id);\n      } catch (err) {\n        console.log(\"err getting user carts\");\n      } // try {\n      // this.orders = await this.myOrdersService.getAllOrders();\n      // }\n      // catch (err) {\n      //     this.notify.error(\"err getting user carts\");\n      // }\n      // const takenShippinDate = this.orders.count([\n      //   {\"$group\" : { \"order\": \"$shippingDate\", \"count\": { \"$sum\": 3 } } },\n      //   ]);\n      // console.log(takenShippinDate);\n\n    }));\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n  getUsersCity() {\n    this.order.city = this.user.city;\n  }\n\n  getUsersSt() {\n    // this.user = store.getState().authState.user;\n    this.order.st = this.user.st;\n  }\n\n  dateValidation() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      // const myFilter = (d: Date | null): boolean => {\n      _this2.user = store.getState().authState.user;\n\n      try {\n        _this2.orders = yield _this2.myOrdersService.getAllUserOrders(_this2.user._id);\n      } catch (err) {\n        console.log(\"err getting user carts\");\n      }\n\n      const uniqueShippinDateArray = _this2.orders.distinct('shippingDate'); // const day = (d || new Date()).getDay();\n      // Prevent Saturday and Sunday from being selected.\n      // return day !== 5 && day !== 6 && day !== takenShippinDate;\n      // public disabledDates = (date: Date): boolean => {\n      // return date.getDate() % 2 === 0;\n      // };\n      // };\n      // try {\n      //   this.orders = await this.myOrdersService.getAllOrders();\n      // }\n      // catch (err) {\n      //     this.notify.error(err);\n      // }\n      // const takenShippinDate = this.orders.count(o.shippingDate === 3);\n      // \n      // let picker = (d: Date | null): boolean => {\n      //   const day = (d || new Date()).getDay();\n      //   // Prevent Saturday and Sunday from being selected.\n      //   return day !== 0 && day !== 6;\n      // };\n\n    })();\n  } // doesn work\n\n\n  cardValidation() {\n    const cardRegEx = '/^(?:4[0-9]{12}(?:[0-9]{3})?)$/ || /^(?:5[1-5][0-9]{14})$/ || /^(?:3[47][0-9]{13})$/ || /^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/';\n\n    if (this.order.card !== cardRegEx) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  makeOrder() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.user = store.getState().authState.user;\n\n      try {\n        _this3.carts = yield _this3.myCartsService.getAllCarts(_this3.user._id);\n        console.log(_this3.carts);\n      } catch (err) {\n        _this3.notify.error(\"err getting user carts-order page\");\n      }\n\n      _this3.order.user = _this3.user;\n      _this3.lastCartIndex = _this3.carts.length - 1;\n\n      try {\n        _this3.items = yield _this3.myItemsService.getAllItems(_this3.carts[_this3.lastCartIndex]._id);\n      } catch (err) {\n        _this3.notify.error(\"err getting user carts\");\n      }\n\n      _this3.order.cart = _this3.carts[_this3.lastCartIndex];\n\n      for (let item of _this3.items) {\n        _this3.totalPrice += item.price;\n      }\n\n      _this3.order.price = 2000;\n      _this3.order.orderDate = new Date().toLocaleDateString();\n      console.log(_this3.order.orderDate);\n      _this3.order.card = _this3.order.card.toString();\n\n      try {\n        _this3.order = yield _this3.myOrdersService.addOrder(_this3.order);\n        _this3.order.card = _this3.order.card.substring(_this3.order.card.length - 4);\n      } catch (err) {\n        _this3.notify.error(\"problem creating order\");\n      }\n\n      console.log(_this3.order);\n      _this3.dialogRef = _this3.dialog.open(DialogComponent, {\n        data: {\n          invoice: _this3.cart\n        }\n      });\n\n      _this3.dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n\n        _this3.myRouter.navigateByUrl(\"/home\");\n\n        _this3.result = result;\n      });\n    })();\n  }\n\n};\nMyOrderComponent = __decorate([Component({\n  selector: 'app-my-order',\n  templateUrl: './my-order.component.html',\n  styleUrls: ['./my-order.component.css'],\n  styles: []\n})], MyOrderComponent);\nexport { MyOrderComponent };","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\Third Project\\fe\\src\\app\\components\\order-area\\my-order\\my-order.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Unsubscribe } from 'redux';\nimport CartModel from 'src/app/models/cart.model';\nimport ItemModel from 'src/app/models/item.model';\nimport OrderModel from 'src/app/models/order.model';\nimport UserModel from 'src/app/models/user.model';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { OrdersService } from 'src/app/services/orders.service';\nimport store from 'src/app/redux/store';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { ItemsService } from 'src/app/services/items.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  quantity: number;\n}\n\n@Component({\n  selector: 'app-my-order',\n  templateUrl: './my-order.component.html',\n  styleUrls: ['./my-order.component.css'],\n})\n\nexport class MyOrderComponent implements OnInit {\n\n  private carts: CartModel[];\n  private items: ItemModel[];\n  public orders: OrderModel[];\n  public user: UserModel;\n  public order = new OrderModel();\n  public cart: CartModel;\n  public totalPrice: number;\n  public unsubscribeMe: Unsubscribe;\n  private lastCartIndex: number;\n  public dialogRef: any;\n  public result: any;\n  public today = new Date();\n\n  constructor(\n    private myCartsService: CartsService,\n    private myOrdersService: OrdersService,\n    private myItemsService: ItemsService,\n    private notify: NotifyService,\n    public dialog: MatDialog,\n    private myRouter: Router\n  ) { }\n\n  ngOnInit() {\n    this.unsubscribeMe = store.subscribe(async () => {\n      this.user = store.getState().authState.user;\n      try {\n        this.carts = await this.myCartsService.getAllCarts(this.user._id);\n      }\n      catch (err) {\n        console.log(\"err getting user carts\");\n      }\n      // try {\n      // this.orders = await this.myOrdersService.getAllOrders();\n      // }\n      // catch (err) {\n      //     this.notify.error(\"err getting user carts\");\n      // }\n      // const takenShippinDate = this.orders.count([\n      //   {\"$group\" : { \"order\": \"$shippingDate\", \"count\": { \"$sum\": 3 } } },\n      //   ]);\n      // console.log(takenShippinDate);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeMe();\n  }\n\n  getUsersCity() {\n    this.order.city=this.user.city;\n  }\n\n  getUsersSt() {\n    // this.user = store.getState().authState.user;\n    this.order.st = this.user.st;\n  }\n\n  myFilter = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    return day !== 5 && day !== 6;\n  };\n\n  async dateValidation() {\n    // const myFilter = (d: Date | null): boolean => {\n      this.user = store.getState().authState.user;\n      try {\n        this.orders = await this.myOrdersService.getAllUserOrders(this.user._id);\n      }\n      catch (err) {\n        console.log(\"err getting user carts\");\n      }\n      const uniqueShippinDateArray = this.orders.distinct('shippingDate');\n      // const day = (d || new Date()).getDay();\n      // Prevent Saturday and Sunday from being selected.\n      // return day !== 5 && day !== 6 && day !== takenShippinDate;\n    // public disabledDates = (date: Date): boolean => {\n    // return date.getDate() % 2 === 0;\n    // };\n    // };\n    \n    // try {\n    //   this.orders = await this.myOrdersService.getAllOrders();\n    // }\n    // catch (err) {\n    //     this.notify.error(err);\n    // }\n    // const takenShippinDate = this.orders.count(o.shippingDate === 3);\n    // \n    // let picker = (d: Date | null): boolean => {\n    //   const day = (d || new Date()).getDay();\n    //   // Prevent Saturday and Sunday from being selected.\n    //   return day !== 0 && day !== 6;\n    // };\n  }\n  \n\n  // doesn work\n  cardValidation() {\n    const cardRegEx = '/^(?:4[0-9]{12}(?:[0-9]{3})?)$/ || /^(?:5[1-5][0-9]{14})$/ || /^(?:3[47][0-9]{13})$/ || /^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/';\n    if (this.order.card !== cardRegEx) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async makeOrder() {\n    this.user = store.getState().authState.user;\n    try {\n      this.carts = await this.myCartsService.getAllCarts(this.user._id);\n      console.log(this.carts);\n    }\n    catch (err) {\n        this.notify.error(\"err getting user carts-order page\");\n    }\n    this.order.user = this.user;\n    this.lastCartIndex = this.carts.length - 1;\n    try {\n      this.items = await this.myItemsService.getAllItems(this.carts[this.lastCartIndex]._id);\n    }\n    catch (err) {\n        this.notify.error(\"err getting user carts\");\n    }\n    this.order.cart = this.carts[this.lastCartIndex];\n    for (let item of this.items) {\n      this.totalPrice += item.price;\n    }\n    this.order.price = 2000;\n    this.order.orderDate = new Date().toLocaleDateString();\n    console.log(this.order.orderDate);\n    this.order.card = this.order.card.toString();\n    try {\n      this.order = await this.myOrdersService.addOrder(this.order);\n      this.order.card = this.order.card.substring(this.order.card.length - 4);\n    }\n    catch (err) {\n      this.notify.error(\"problem creating order\");\n    }\n    console.log(this.order);\n    this.dialogRef = this.dialog.open(DialogComponent, {\n      data: {invoice: this.cart},\n    });\n    this.dialogRef.afterClosed().subscribe((result: any) => {\n      console.log('The dialog was closed');\n      this.myRouter.navigateByUrl(\"/home\");\n      this.result = result;\n    });\n  }\n}\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}