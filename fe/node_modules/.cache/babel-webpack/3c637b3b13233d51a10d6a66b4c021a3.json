{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/Third Project/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CredentialsModel } from 'src/app/models/credentials.model';\nimport store from 'src/app/redux/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/carts.service\";\nimport * as i3 from \"src/app/services/orders.service\";\nimport * as i4 from \"src/app/services/notify.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction LoginComponent_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 7);\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Start shopping \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 8);\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Resume shoppoing \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_1_ng_container_1_ng_container_1_Template, 5, 0, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_1_ng_container_1_ng_container_2_Template, 5, 0, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.openCartDate || ctx_r1.openCartDate === ctx_r1.lastOrderDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.openCartDate && !ctx_r1.lastOrderDate);\n  }\n}\n\nfunction LoginComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 9);\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Admin page \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_1_ng_container_2_Template, 5, 0, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.admin === false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.admin === true);\n  }\n}\n\nexport class LoginComponent {\n  constructor(myAuthService, myCartsService, myOrdersService, notify, myRouter) {\n    this.myAuthService = myAuthService;\n    this.myCartsService = myCartsService;\n    this.myOrdersService = myOrdersService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.credentials = new CredentialsModel();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    this.unsubscribeMe = store.subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.user = store.getState().authState.user;\n\n      if (_this.user === null) {\n        console.log(\"no user\");\n      } else if (_this.user.admin === true) {\n        console.log(\"admin\");\n      } else {\n        try {\n          _this.carts = yield _this.myCartsService.getAllCarts(_this.user._id);\n        } catch (err) {\n          console.log(\"no carts\");\n        }\n\n        if (_this.carts === null) {\n          _this.openCartDate = null;\n        } else {\n          try {\n            _this.orders = yield _this.myOrdersService.getAllUserOrders(_this.user._id);\n          } catch (err) {\n            console.log(\"err getting orders\");\n          }\n\n          _this.lastCartIndex = _this.carts.length - 1;\n          _this.lastCartId = _this.carts[_this.lastCartIndex]._id;\n\n          if (_this.orders === null) {\n            console.log(\"no orders\");\n            _this.openCartDate = _this.carts[_this.lastCartIndex].date;\n          } else {\n            _this.lastOrderIndex = _this.orders.length - 1;\n            _this.lastOrderCartId = _this.orders[_this.lastOrderIndex].cart._id;\n\n            if (_this.lastCartId === _this.lastOrderCartId) {\n              _this.lastOrderDate = _this.orders[_this.lastOrderIndex].orderDate.toLocaleDateString();\n              console.log(_this.lastOrderDate);\n            } else {\n              _this.openCartDate = _this.carts[_this.lastCartIndex].date;\n            }\n          }\n        }\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n  login() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.myAuthService.login(_this2.credentials);\n\n        if (_this2.user.admin === true) {\n          _this2.notify.success(\"Welcome sir\");\n        } else {\n          _this2.notify.success(\"You are logged-in, enjoy your shopping\");\n        }\n\n        _this2.myRouter.navigateByUrl(\"/home\");\n      } catch (err) {\n        _this2.notify.error(err);\n      }\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.CartsService), i0.ɵɵdirectiveInject(i3.OrdersService), i0.ɵɵdirectiveInject(i4.NotifyService), i0.ɵɵdirectiveInject(i5.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"submit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-stroked-button\", \"\"], [\"mat-stroked-button\", \"\", \"routerLink\", \"/register\", \"routerLinkActive\", \"active\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/products\", \"routerLinkActive\", \"active\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/products\", \"routerLinkActive\", \"active\", 2, \"width\", \"200px\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/admin\", \"routerLinkActive\", \"active\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LoginComponent_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵelementStart(3, \"mat-icon\");\n      i0.ɵɵtext(4, \"message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_6_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(7, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.credentials.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.credentials.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 5);\n      i0.ɵɵelementStart(16, \"mat-icon\");\n      i0.ɵɵtext(17, \"send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 6);\n      i0.ɵɵelementStart(20, \"mat-icon\");\n      i0.ɵɵtext(21, \"send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n    }\n  },\n  directives: [i6.NgIf, i7.MatIcon, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.NgForm, i9.MatFormField, i9.MatLabel, i10.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgModel, i11.MatButton, i5.RouterLink, i5.RouterLinkActive],\n  styles: [\"form[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.mat-hint[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.mat-raised-button[_ngcontent-%COMP%] {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNkJBQTZCO0lBQzdCLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSwgbWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG4ubWF0LWhpbnQge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmRpdiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgKi9cclxuICAgIC8qIHBhZGRpbmc6IDAgMTBweDsgKi9cclxuICAgIC8qIG1hcmdpbjogMTBweDsgKi9cclxuICAgIC8qIGJvcmRlci1yYWRpdXM6IDEwcHg7ICovXHJcbiAgICAvKiBib3gtc2hhZG93OiA1cHggNXB4IDEwcHg7ICovXHJcbn1cclxuXHJcbmgzIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\Third Project\\fe\\src\\app\\components\\auth-area\\login\\login.component.ts","C:\\Users\\user\\Desktop\\FullStack\\JB\\Third Project\\fe\\src\\app\\components\\auth-area\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CredentialsModel } from 'src/app/models/credentials.model';\nimport UserModel from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { Unsubscribe } from 'redux';\nimport store from 'src/app/redux/store';\nimport CartModel from 'src/app/models/cart.model';\nimport OrderModel from 'src/app/models/order.model';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n    public credentials = new CredentialsModel();\n    public user: UserModel;\n    private unsubscribeMe: Unsubscribe;\n    public openCartDate: string;\n    public lastOrderDate: string;\n    public lastOrderIndex: number;\n    private lastCartIndex: number;\n    public orders: OrderModel[];\n    public carts: CartModel[];\n    public newCart: CartModel;\n    public cart: CartModel;\n    public lastCartId: string;\n    public lastOrderCartId: string;\n\n    constructor(\n        private myAuthService: AuthService,\n        private myCartsService: CartsService,\n        private myOrdersService: OrdersService,\n        private notify: NotifyService,\n        private myRouter: Router\n        ) { }\n\n    ngOnInit() {\n        this.unsubscribeMe = store.subscribe(async () => {\n            this.user = store.getState().authState.user;\n            if (this.user === null) {\n                console.log(\"no user\");\n            } else if (this.user.admin === true ) {\n                console.log(\"admin\");\n            } else {\n                try {\n                    this.carts = await this.myCartsService.getAllCarts(this.user._id);\n                }\n                catch (err) {\n                    console.log(\"no carts\");\n                }\n                if (this.carts === null) {\n                    this.openCartDate = null;\n                } else {\n                    try {\n                        this.orders = await this.myOrdersService.getAllUserOrders(this.user._id);\n                    }\n                    catch (err) {\n                        console.log(\"err getting orders\");\n                    }\n                    this.lastCartIndex = this.carts.length-1;\n                    this.lastCartId = this.carts[this.lastCartIndex]._id;\n                    if (this.orders === null) {\n                        console.log(\"no orders\");\n                        this.openCartDate = this.carts[this.lastCartIndex].date;\n                    } else {\n                        this.lastOrderIndex = this.orders.length-1;\n                        this.lastOrderCartId = this.orders[this.lastOrderIndex].cart._id;\n                        if (this.lastCartId === this.lastOrderCartId) {\n                            this.lastOrderDate = this.orders[this.lastOrderIndex].orderDate.toLocaleDateString();\n                            console.log(this.lastOrderDate);\n                        } else {\n                            this.openCartDate = this.carts[this.lastCartIndex].date;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscribeMe();\n    }\n\n    public async login() {\n        try {\n            await this.myAuthService.login(this.credentials);\n            if (this.user.admin===true) {\n                this.notify.success(\"Welcome sir\");\n            } else {\n                this.notify.success(\"You are logged-in, enjoy your shopping\");\n            }\n            this.myRouter.navigateByUrl(\"/home\");\n        }\n        catch(err) {\n            this.notify.error(err);\n        }\n    }\n\n    // async createNewCart() {\n    //     this.cart = new CartModel();\n    //     this.cart.user = this.user;\n    //     this.cart.date = new Date().toDateString();\n    //     try {\n    //       this.newCart = await this.myCartsService.addCart(this.cart);\n    //       console.log(this.newCart);\n    //     }\n    //     catch (err) {\n    //         this.notify.error(\"problem creating cart\");\n    //     }\n    //     this.myRouter.navigateByUrl(\"/products\");\n    // }\n}\n","<div>\n    <ng-container *ngIf=\"user\">\n        <ng-container *ngIf=\"user.admin===false\">\n            <ng-container *ngIf=\"!openCartDate || openCartDate === lastOrderDate\">\n                <button mat-raised-button routerLink=\"/products\" routerLinkActive=\"active\">\n                    <mat-icon>send</mat-icon>\n                    Start shopping\n                </button>\n            </ng-container>\n            <ng-container *ngIf=\"openCartDate && !lastOrderDate\">\n                <button mat-raised-button style=\"width:200px\" routerLink=\"/products\" routerLinkActive=\"active\">\n                    <mat-icon>send</mat-icon>\n                    Resume shoppoing\n                </button>\n            </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"user.admin===true\">\n            <button mat-raised-button routerLink=\"/admin\" routerLinkActive=\"active\">\n                <mat-icon>send</mat-icon>\n                Admin page\n            </button>\n        </ng-container>\n    </ng-container>\n    <h2>\n        <mat-icon>message</mat-icon>\n        Login\n    </h2>\n    <form (submit)=\"login()\">\n        <mat-form-field appearance=\"fill\">\n        <mat-label>Email: </mat-label>\n        <input matInput type=\"email\" name=\"email\" [(ngModel)]=\"credentials.email\">\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n        <mat-label>Password: </mat-label>\n        <input matInput type=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\">\n        <!-- <mat-hint *ngIf=\"credentials.password !== user.password\">Wrong password</mat-hint> -->\n        </mat-form-field>\n\n        <button mat-stroked-button>\n            <mat-icon>send</mat-icon>\n            Login\n        </button>\n\n        <button mat-stroked-button routerLink=\"/register\" routerLinkActive=\"active\">\n            <mat-icon>send</mat-icon>\n            Register\n        </button>\n    </form>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}