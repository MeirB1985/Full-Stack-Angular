{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/Third Project/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport store from 'src/app/redux/store';\nlet ItemCardComponent = class ItemCardComponent {\n  constructor(myActivatedRoute, myCartsService, myItemsService) {\n    this.myActivatedRoute = myActivatedRoute;\n    this.myCartsService = myCartsService;\n    this.myItemsService = myItemsService;\n    this.imageUrl = environment.itemImagesUrl;\n    this.highLight = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.user = store.getState().authState.user;\n\n      try {\n        _this.carts = yield _this.myCartsService.getAllCarts(_this.user._id);\n      } catch (err) {\n        console.log(\"err getting user carts\");\n      }\n\n      _this.lastCartIndex = _this.carts.length - 1;\n\n      try {\n        _this.items = yield _this.myItemsService.getAllItems(_this.carts[_this.lastCartIndex]._id);\n      } catch (err) {\n        console.log(\"err getting user items\");\n      }\n\n      if (_this.result !== undefined) {\n        for (let i of _this.result) {\n          if (i === _this.item) {\n            _this.highLight = true;\n          }\n        }\n      }\n\n      if (_this.myActivatedRoute.snapshot.routeConfig.path === \"orders/new\") {\n        _this.isCartPage = false;\n      } else {\n        _this.isCartPage = true;\n      }\n\n      return _this.isCartPage;\n    })();\n  }\n\n  deleteItem() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.myItemsService.deleteItem(_this2.item._id);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }\n\n};\n\n__decorate([Input()], ItemCardComponent.prototype, \"item\", void 0);\n\n__decorate([Input()], ItemCardComponent.prototype, \"result\", void 0);\n\nItemCardComponent = __decorate([Component({\n  selector: 'app-item-card',\n  templateUrl: './item-card.component.html',\n  styleUrls: ['./item-card.component.css'],\n  styles: []\n})], ItemCardComponent);\nexport { ItemCardComponent };","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\Third Project\\fe\\src\\app\\components\\items-area\\item-card\\item-card.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,EAAoB,KAApB,QAAyC,eAAzC;AAGA,SAAS,WAAT,QAA4B,8BAA5B;AAEA,OAAO,KAAP,MAAkB,qBAAlB;AAQA,IAAa,iBAAiB,GAA9B,MAAa,iBAAb,CAA8B;AAgB5B,EAAA,WAAA,CACU,gBADV,EAEU,cAFV,EAGU,cAHV,EAGsC;AAF5B,SAAA,gBAAA,GAAA,gBAAA;AACA,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,cAAA,GAAA,cAAA;AAPH,SAAA,QAAA,GAAW,WAAW,CAAC,aAAvB;AAEA,SAAA,SAAA,GAAqB,KAArB;AAMF;;AAEC,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,IAAL,GAAY,KAAK,CAAC,QAAN,GAAiB,SAAjB,CAA2B,IAAvC;;AACA,UAAI;AACF,QAAA,KAAI,CAAC,KAAL,SAAmB,KAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,KAAI,CAAC,IAAL,CAAU,GAA1C,CAAnB;AACD,OAFD,CAGA,OAAO,GAAP,EAAY;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACD;;AACD,MAAA,KAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,CAAzC;;AACA,UAAI;AACF,QAAA,KAAI,CAAC,KAAL,SAAmB,KAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,KAAI,CAAC,KAAL,CAAW,KAAI,CAAC,aAAhB,EAA+B,GAA/D,CAAnB;AACD,OAFD,CAGA,OAAO,GAAP,EAAY;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACD;;AAED,UAAI,KAAI,CAAC,MAAL,KAAgB,SAApB,EAA+B;AAC7B,aAAK,IAAI,CAAT,IAAc,KAAI,CAAC,MAAnB,EAA2B;AACzB,cAAI,CAAC,KAAK,KAAI,CAAC,IAAf,EAAqB;AACnB,YAAA,KAAI,CAAC,SAAL,GAAiB,IAAjB;AACD;AACF;AACF;;AACD,UAAI,KAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,WAA/B,CAA2C,IAA3C,KAAoD,YAAxD,EAAsE;AACpE,QAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;AACD,OAFD,MAEO;AACL,QAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AACD;;AACD,aAAO,KAAI,CAAC,UAAZ;AA5BY;AA6Bb;;AAGK,EAAA,UAAU,GAAA;AAAA;;AAAA;AACd,UAAI;AACF,cAAM,MAAI,CAAC,cAAL,CAAoB,UAApB,CAA+B,MAAI,CAAC,IAAL,CAAU,GAAzC,CAAN;AACD,OAFD,CAGA,OAAM,GAAN,EAAW;AACP,QAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACH;AANa;AAOf;;AA7D2B,CAA9B;;AAGE,UAAA,CAAA,CADC,KAAK,EACN,CAAA,E,2BAAA,E,MAAA,E,KAAuB,CAAvB,CAAA;;AAGA,UAAA,CAAA,CADC,KAAK,EACN,CAAA,E,2BAAA,E,QAAA,E,KAA2B,CAA3B,CAAA;;AANW,iBAAiB,GAAA,UAAA,CAAA,CAN7B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,eADD;AAET,EAAA,WAAW,EAAE,4BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,2BAAD,CAHF;;AAAA,CAAD,CAMoB,CAAA,EAAjB,iBAAiB,CAAjB;SAAA,iB","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport ItemModel from 'src/app/models/item.model';\nimport { ItemsService } from 'src/app/services/items.service';\nimport { environment } from 'src/environments/environment';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport store from 'src/app/redux/store';\n\n@Component({\n  selector: 'app-item-card',\n  templateUrl: './item-card.component.html',\n  styleUrls: ['./item-card.component.css']\n})\n\nexport class ItemCardComponent {\n\n  @Input()\n  public item: ItemModel;\n\n  @Input()\n  public result: ItemModel[];\n  \n  private carts: CartModel[];\n  public user: UserModel;\n  public items: ItemModel[];\n  private lastCartIndex: number;\n  public imageUrl = environment.itemImagesUrl;\n  public isCartPage: boolean;\n  public highLight: boolean = false;\n\n  constructor(\n    private myActivatedRoute: ActivatedRoute,\n    private myCartsService: CartsService,\n    private myItemsService: ItemsService\n  ) { }\n\n  async ngOnInit() {\n    this.user = store.getState().authState.user;\n    try {\n      this.carts = await this.myCartsService.getAllCarts(this.user._id);\n    }\n    catch (err) {\n      console.log(\"err getting user carts\");\n    }\n    this.lastCartIndex = this.carts.length - 1;\n    try {\n      this.items = await this.myItemsService.getAllItems(this.carts[this.lastCartIndex]._id);\n    }\n    catch (err) {\n      console.log(\"err getting user items\");\n    }\n\n    if (this.result !== undefined) {\n      for (let i of this.result) {\n        if (i === this.item) {\n          this.highLight = true;\n        }\n      }\n    }\n    if (this.myActivatedRoute.snapshot.routeConfig.path === \"orders/new\") {\n      this.isCartPage = false;\n    } else {\n      this.isCartPage = true;\n    }\n    return this.isCartPage;\n  }\n  \n\n  async deleteItem() {\n    try {\n      await this.myItemsService.deleteItem(this.item._id);\n    }\n    catch(err) {\n        console.log(err);\n    }\n  }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}