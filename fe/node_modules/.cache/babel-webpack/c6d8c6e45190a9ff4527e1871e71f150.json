{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/ThirdProject/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport CategoryModel from '../models/category.model';\nimport { categoryAddedAction, categoriesDownloadedAction } from '../redux/categories-state';\nimport store from '../redux/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n  } // Get all products: \n\n\n  getAllCategories() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().categoriesState.categories.length === 0) {\n        const categories = yield _this.http.get(environment.categoriesUrl).toPromise();\n        store.dispatch(categoriesDownloadedAction(categories));\n      }\n\n      return store.getState().categoriesState.categories;\n    })();\n  } // Get one product: \n\n\n  getOneCategory(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().categoriesState.categories.length === 0) {\n        const categories = yield _this2.http.get(environment.categoriesUrl).toPromise();\n        store.dispatch(categoriesDownloadedAction(categories));\n      }\n\n      const category = store.getState().categoriesState.categories.find(p => p._id === id);\n      return category;\n    })();\n  } // Add product: \n\n\n  addCategory(category) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const myFormData = CategoryModel.convertToFormData(category);\n      const addedCategory = yield _this3.http.post(environment.categoriesUrl, myFormData).toPromise();\n      store.dispatch(categoryAddedAction(addedCategory));\n      return addedCategory;\n    })();\n  }\n\n}\n\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\ThirdProject\\fe\\src\\app\\services\\category.service.ts"],"names":[],"mappings":";AAEA,SAAS,WAAT,QAA4B,8BAA5B;AACA,OAAO,aAAP,MAA0B,0BAA1B;AACA,SAAS,mBAAT,EAA8B,0BAA9B,QAAgE,2BAAhE;AACA,OAAO,KAAP,MAAkB,gBAAlB;;;AAKA,OAAM,MAAO,eAAP,CAAsB;AAE1B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAqB,GAFf,CAIxB;;;AACa,EAAA,gBAAgB,GAAA;AAAA;;AAAA;AACzB,UAAI,KAAK,CAAC,QAAN,GAAiB,eAAjB,CAAiC,UAAjC,CAA4C,MAA5C,KAAuD,CAA3D,EAA8D;AAC1D,cAAM,UAAU,SAAS,KAAI,CAAC,IAAL,CAAU,GAAV,CAA+B,WAAW,CAAC,aAA3C,EAA0D,SAA1D,EAAzB;AACA,QAAA,KAAK,CAAC,QAAN,CAAe,0BAA0B,CAAC,UAAD,CAAzC;AACH;;AACD,aAAO,KAAK,CAAC,QAAN,GAAiB,eAAjB,CAAiC,UAAxC;AALyB;AAM5B,GAXuB,CAaxB;;;AACa,EAAA,cAAc,CAAC,EAAD,EAAW;AAAA;;AAAA;AAClC,UAAI,KAAK,CAAC,QAAN,GAAiB,eAAjB,CAAiC,UAAjC,CAA4C,MAA5C,KAAuD,CAA3D,EAA8D;AAC1D,cAAM,UAAU,SAAS,MAAI,CAAC,IAAL,CAAU,GAAV,CAA+B,WAAW,CAAC,aAA3C,EAA0D,SAA1D,EAAzB;AACA,QAAA,KAAK,CAAC,QAAN,CAAe,0BAA0B,CAAC,UAAD,CAAzC;AACH;;AACD,YAAM,QAAQ,GAAG,KAAK,CAAC,QAAN,GAAiB,eAAjB,CAAiC,UAAjC,CAA4C,IAA5C,CAAiD,CAAC,IAAI,CAAC,CAAC,GAAF,KAAU,EAAhE,CAAjB;AACA,aAAO,QAAP;AANkC;AAOrC,GArBuB,CAuBxB;;;AACa,EAAA,WAAW,CAAC,QAAD,EAAwB;AAAA;;AAAA;AAC5C,YAAM,UAAU,GAAa,aAAa,CAAC,iBAAd,CAAgC,QAAhC,CAA7B;AACA,YAAM,aAAa,SAAS,MAAI,CAAC,IAAL,CAAU,IAAV,CAA8B,WAAW,CAAC,aAA1C,EAAyD,UAAzD,EAAqE,SAArE,EAA5B;AACA,MAAA,KAAK,CAAC,QAAN,CAAe,mBAAmB,CAAC,aAAD,CAAlC;AACA,aAAO,aAAP;AAJ4C;AAK/C;;AA7BuB;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA,I;AAAA,EAAA,UAAA,EAFd","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport CategoryModel from '../models/category.model';\nimport { categoryAddedAction, categoriesDownloadedAction } from '../redux/categories-state';\nimport store from '../redux/store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) { }\n\n    // Get all products: \n    public async getAllCategories() {\n        if (store.getState().categoriesState.categories.length === 0) {\n            const categories = await this.http.get<CategoryModel[]>(environment.categoriesUrl).toPromise();\n            store.dispatch(categoriesDownloadedAction(categories));\n        }\n        return store.getState().categoriesState.categories;\n    }\n\n    // Get one product: \n    public async getOneCategory(id: string) {\n        if (store.getState().categoriesState.categories.length === 0) {\n            const categories = await this.http.get<CategoryModel[]>(environment.categoriesUrl).toPromise();\n            store.dispatch(categoriesDownloadedAction(categories));\n        }\n        const category = store.getState().categoriesState.categories.find(p => p._id === id);\n        return category;\n    }\n\n    // Add product: \n    public async addCategory(category: CategoryModel) {\n        const myFormData: FormData = CategoryModel.convertToFormData(category);\n        const addedCategory = await this.http.post<CategoryModel>(environment.categoriesUrl, myFormData).toPromise();\n        store.dispatch(categoryAddedAction(addedCategory));\n        return addedCategory;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}