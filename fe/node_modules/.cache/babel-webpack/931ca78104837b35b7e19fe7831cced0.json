{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/FullStack/JB/ThirdProject/fe/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { UserModel } from 'src/app/models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"./../../../services/user.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction RegisterComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing id.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"ID must be 9 characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"ID must contain numbers only\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"This Id is in use\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing email.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This is not a valid Email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"This email has been taken, please use another one\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please confirm your password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Your passwords does not match.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing first name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing last name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing street.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RegisterComponent {\n  constructor(myAuthService, notify, myUserService, // private userModel: UserModel,\n  myRouter) {\n    this.myAuthService = myAuthService;\n    this.notify = notify;\n    this.myUserService = myUserService;\n    this.myRouter = myRouter;\n    this.user = new UserModel();\n  }\n\n  register() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.myAuthService.register(_this.user);\n\n        _this.notify.success(\"You are registered :-)\");\n\n        _this.myRouter.navigateByUrl(\"/home\");\n      } catch (err) {\n        _this.notify.error(err);\n      }\n    })();\n  }\n\n  confirmFun() {\n    if (this.user.password === this.user.confirmPassword) {\n      this.confirm = true;\n    } else {\n      this.confirm = false;\n    }\n\n    console.log(\"confirm: \" + this.confirm);\n    return this.confirm;\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        // 2. goes to database and searches if email exsits there\n        // 2a. add user service in order to GET / check emails\n        _this2.usersList = yield _this2.myUserService.getAllUsers();\n      } catch (err) {\n        _this2.notify.error(err);\n      } // console.log(this.usersList);\n\n    })();\n  }\n\n  checkEmail() {\n    // 1. gets the email that was inserted in html (this.email)\n    const email = this.user.email;\n    const result = this.usersList.filter(userObj => userObj.email === email); // 3. if email exists: alert user via span\n\n    if (result.length >= 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkId() {\n    // 1. gets the email that was inserted in html (this.email)\n    const id = this.user.id;\n    const result = this.usersList.filter(userObj => userObj.id === id); // 3. if email exists: alert user via span\n\n    if (result.length >= 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NotifyService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 91,\n  vars: 26,\n  consts: [[1, \"flex-child\"], [3, \"submit\"], [\"myForm\", \"ngForm\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"id\", \"required\", \"\", \"ngModel\", \"\", \"minlength\", \"9\", \"maxlength\", \"9\", \"pattern\", \"[0-9]+\", 3, \"ngModel\", \"blur\", \"ngModelChange\"], [\"idBox\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\", 3, \"ngModel\", \"blur\", \"ngModelChange\"], [\"emailBox\", \"ngModel\", \"email\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"blur\", \"ngModelChange\"], [\"confirmPassword\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"firstNameBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"lastNameBox\", \"ngModel\"], [\"name\", \"city\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"value\", \"tel-aviv\"], [\"value\", \"jerusalem\"], [\"value\", \"haifa\"], [\"value\", \"beer-sheva\"], [\"value\", \"natanya\"], [\"value\", \"ashdod\"], [\"value\", \"ashkelon\"], [\"value\", \"holon\"], [\"value\", \"harish\"], [\"value\", \"hadera\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"st\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"stBox\", \"ngModel\"], [\"mat-stroked-button\", \"\", 3, \"disabled\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h2\");\n      i0.ɵɵelementStart(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" Sign In - Step 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_5_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(8, \"mat-label\");\n      i0.ɵɵtext(9, \"ID: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4, 5);\n      i0.ɵɵlistener(\"blur\", function RegisterComponent_Template_input_blur_10_listener() {\n        return ctx.checkId();\n      })(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.user.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, RegisterComponent_mat_error_12_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(13, RegisterComponent_mat_error_13_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(14, RegisterComponent_mat_error_14_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(15, RegisterComponent_mat_hint_15_Template, 2, 0, \"mat-hint\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 7, 8);\n      i0.ɵɵlistener(\"blur\", function RegisterComponent_Template_input_blur_19_listener() {\n        return ctx.checkEmail();\n      })(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, RegisterComponent_mat_error_22_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(23, RegisterComponent_mat_error_23_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(24, RegisterComponent_mat_hint_24_Template, 2, 0, \"mat-hint\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(26, \"mat-label\");\n      i0.ɵɵtext(27, \"Create password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, RegisterComponent_mat_error_30_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Confirm password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 11, 12);\n      i0.ɵɵlistener(\"blur\", function RegisterComponent_Template_input_blur_34_listener() {\n        return ctx.confirmFun();\n      })(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(36, RegisterComponent_mat_error_36_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(37, RegisterComponent_mat_hint_37_Template, 2, 0, \"mat-hint\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 0);\n      i0.ɵɵelementStart(39, \"h2\");\n      i0.ɵɵelementStart(40, \"mat-icon\");\n      i0.ɵɵtext(41, \"message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(42, \" Sign In - Step 2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_43_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(45, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(46, \"mat-label\");\n      i0.ɵɵtext(47, \"First name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_48_listener($event) {\n        return ctx.user.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, RegisterComponent_mat_error_50_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(52, \"mat-label\");\n      i0.ɵɵtext(53, \"Last name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.user.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(56, RegisterComponent_mat_error_56_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(58, \"mat-label\");\n      i0.ɵɵtext(59, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"mat-select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_mat_select_ngModelChange_60_listener($event) {\n        return ctx.user.city = $event;\n      });\n      i0.ɵɵelementStart(61, \"mat-option\", 18);\n      i0.ɵɵtext(62, \"Tel-Aviv\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"mat-option\", 19);\n      i0.ɵɵtext(64, \"Jerusalem\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"mat-option\", 20);\n      i0.ɵɵtext(66, \"Haifa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"mat-option\", 21);\n      i0.ɵɵtext(68, \"Beer-Sheva\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"mat-option\", 22);\n      i0.ɵɵtext(70, \"Natanya\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"mat-option\", 23);\n      i0.ɵɵtext(72, \"Ashdod\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"mat-option\", 24);\n      i0.ɵɵtext(74, \"Ashkelon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"mat-option\", 25);\n      i0.ɵɵtext(76, \"Holon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"mat-option\", 26);\n      i0.ɵɵtext(78, \"Harish\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"mat-option\", 27);\n      i0.ɵɵtext(80, \"Hadera\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(82, \"mat-label\");\n      i0.ɵɵtext(83, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"input\", 28, 29);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_84_listener($event) {\n        return ctx.user.st = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(86, RegisterComponent_mat_error_86_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(87, \"button\", 30);\n      i0.ɵɵelementStart(88, \"mat-icon\");\n      i0.ɵɵtext(89, \"send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(90, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      const _r1 = i0.ɵɵreference(11);\n\n      const _r6 = i0.ɵɵreference(20);\n\n      const _r11 = i0.ɵɵreference(29);\n\n      const _r13 = i0.ɵɵreference(35);\n\n      const _r17 = i0.ɵɵreference(49);\n\n      const _r19 = i0.ɵɵreference(55);\n\n      const _r21 = i0.ɵɵreference(85);\n\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.required) && _r1.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.minlength) && (_r1.errors == null ? null : _r1.errors.minlength));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors.pattern) && _r1.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkId());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (_r6.errors == null ? null : _r6.errors.required) && _r6.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r6.errors == null ? null : _r6.errors.pattern) && _r6.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkEmail());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r11.errors == null ? null : _r11.errors.required) && _r11.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r13.errors == null ? null : _r13.errors.required) && _r13.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.confirm && _r13.touched);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.firstName)(\"disabled\", ctx.checkEmail() || ctx.checkId() || ctx.user.password != ctx.user.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r17.errors == null ? null : _r17.errors.required) && _r17.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.lastName)(\"disabled\", ctx.checkEmail() || ctx.checkId() || ctx.user.password != ctx.user.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r19.errors == null ? null : _r19.errors.required) && _r19.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.city)(\"disabled\", ctx.checkEmail() || ctx.checkId() || ctx.user.password != ctx.user.confirmPassword);\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.st)(\"disabled\", ctx.checkEmail() || ctx.checkId() || ctx.user.password != ctx.user.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r21.errors == null ? null : _r21.errors.required) && _r21.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.form.invalid || ctx.checkEmail() || ctx.checkId() || ctx.user.password != ctx.user.confirmPassword);\n    }\n  },\n  directives: [i5.MatIcon, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i7.MatFormField, i7.MatLabel, i8.MatInput, i6.DefaultValueAccessor, i6.RequiredValidator, i6.NgControlStatus, i6.NgModel, i6.MinLengthValidator, i6.MaxLengthValidator, i6.PatternValidator, i9.NgIf, i10.MatSelect, i11.MatOption, i12.MatButton, i7.MatError, i7.MatHint],\n  styles: [\"form[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nmat-hint[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    border: 1px solid black;\\r\\n    padding: 0 10px;\\r\\n    margin: 10px;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 5px 5px 10px;\\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQix1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNEJHIiwiZmlsZSI6InJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtLCBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbm1hdC1oaW50IHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5kaXYge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4O1xyXG59XHJcblxyXG5oMyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLyogZm9ybSB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG5kaXYge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweDtcclxufVxyXG5pbnB1dCwgYnV0dG9uLCBsYWJlbCwgc2VsZWN0LCBvcHRpb24ge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbnNwYW4ge1xyXG4gICAgcG9zaXRpb246IG1hcmdpbi1ib3R0b207XHJcbiAgICBtYXJnaW46IDAgMjBweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbn0gKi8iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\FullStack\\JB\\ThirdProject\\fe\\src\\app\\components\\auth-area\\register\\register.component.ts","C:\\Users\\user\\Desktop\\FullStack\\JB\\ThirdProject\\fe\\src\\app\\components\\auth-area\\register\\register.component.html"],"names":[],"mappings":"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","sourcesContent":["import { UserService } from './../../../services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    public user = new UserModel();\n    private usersList: UserModel[];\n    public confirm: boolean;\n\n    constructor(\n        private myAuthService: AuthService,\n        private notify: NotifyService,\n        private myUserService: UserService,\n        // private userModel: UserModel,\n        private myRouter: Router) { }\n\n    public async register() {\n        try {\n            await this.myAuthService.register(this.user);\n            this.notify.success(\"You are registered :-)\");\n            this.myRouter.navigateByUrl(\"/home\");\n        }\n        catch(err) {\n            this.notify.error(err);\n        }\n    }\n\n    public confirmFun() {\n        if (this.user.password === this.user.confirmPassword) {\n            this.confirm = true;\n        } else {\n            this.confirm = false;\n        }\n        console.log(\"confirm: \" + this.confirm)\n        return this.confirm;\n    } \n\n    public async ngOnInit() {\n        try {\n            // 2. goes to database and searches if email exsits there\n            // 2a. add user service in order to GET / check emails\n                this.usersList = await this.myUserService.getAllUsers();\n            }   catch(err) {\n                    this.notify.error(err);\n            }   \n            // console.log(this.usersList);\n    }\n    public checkEmail() {\n        // 1. gets the email that was inserted in html (this.email)\n        const email = this.user.email\n        \n        const result = this.usersList.filter(userObj => userObj.email === email);\n        // 3. if email exists: alert user via span\n        if (result.length >= 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    public checkId() {\n        // 1. gets the email that was inserted in html (this.email)\n        const id = this.user.id\n        \n        const result = this.usersList.filter(userObj => userObj.id === id);\n      \n        // 3. if email exists: alert user via span\n        if (result.length >= 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n}\n\n\n","<div class=\"flex-child\">\n\n    <h2>\n        <mat-icon>message</mat-icon>\n        Sign In - Step 1\n    </h2>\n\n    <form #myForm=\"ngForm\" (submit)=\"register()\">\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>ID: </mat-label>\n            <input matInput #idBox=\"ngModel\" type=\"text\" name=\"id\" (blur)=\"checkId()\" [(ngModel)]=\"user.id\" required ngModel minlength=\"9\" maxlength=\"9\" pattern=\"[0-9]+\">\n            <mat-error *ngIf=\"idBox.errors?.required && idBox.touched\">Missing id.</mat-error>\n            <mat-error *ngIf=\"idBox.errors?.minlength && idBox.errors?.minlength\">ID must be 9 characters only</mat-error>\n            <mat-error *ngIf=\"idBox.errors?.pattern && idBox.touched\">ID must contain numbers only</mat-error>\n            <mat-hint *ngIf=\"checkId()\">This Id is in use</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email: </mat-label>\n            <input matInput #emailBox=\"ngModel\" type=\"email\" #email=\"ngModel\" name=\"email\" (blur)=\"checkEmail()\" [(ngModel)]=\"user.email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"/>\n            <mat-error *ngIf=\"emailBox.errors?.required && emailBox.touched\">Missing email.</mat-error>\n            <mat-error *ngIf=\"emailBox.errors?.pattern && emailBox.touched\">This is not a valid Email</mat-error>\n            <mat-hint *ngIf=\"checkEmail()\">This email has been taken, please use another one</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Create password: </mat-label>\n            <input matInput #password=\"ngModel\" type=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required />\n            <mat-error *ngIf=\"password.errors?.required && password.touched\">Missing password.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Confirm password: </mat-label>\n            <input matInput #confirmPassword=\"ngModel\" type=\"password\" name=\"confirmPassword\" (blur)=\"confirmFun()\" [(ngModel)]=\"user.confirmPassword\" required/>\n            <mat-error *ngIf=\"confirmPassword.errors?.required && confirmPassword.touched\">Please confirm your password.</mat-error>\n            <mat-hint *ngIf=\"!confirm && confirmPassword.touched\">Your passwords does not match.</mat-hint>\n        </mat-form-field>\n\n    </form>\n\n</div>\n<div class=\"flex-child\">\n\n    <h2>\n        <mat-icon>message</mat-icon>\n        Sign In - Step 2\n    </h2>\n\n    <form #myForm=\"ngForm\" (submit)=\"register()\">\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First name: </mat-label>\n            <input matInput #firstNameBox=\"ngModel\" type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\" required [disabled]=\"checkEmail() || checkId() || user.password != user.confirmPassword\"/>\n            <mat-error *ngIf=\"firstNameBox.errors?.required && firstNameBox.touched\">Missing first name.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last name: </mat-label>\n            <input matInput #lastNameBox=\"ngModel\" type=\"text\" name=\"lastName\" [(ngModel)]=\"user.lastName\" required [disabled]=\"checkEmail() || checkId() || user.password != user.confirmPassword\"/>\n            <mat-error *ngIf=\"lastNameBox.errors?.required && lastNameBox.touched\">Missing last name.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>City: </mat-label>\n            <mat-select [(ngModel)]=\"user.city\" name=\"city\" [disabled]=\"checkEmail() || checkId() || user.password != user.confirmPassword\">\n                <mat-option value=\"tel-aviv\">Tel-Aviv</mat-option>\n                <mat-option value=\"jerusalem\">Jerusalem</mat-option>\n                <mat-option value=\"haifa\">Haifa</mat-option>\n                <mat-option value=\"beer-sheva\">Beer-Sheva</mat-option>\n                <mat-option value=\"natanya\">Natanya</mat-option>\n                <mat-option value=\"ashdod\">Ashdod</mat-option>\n                <mat-option value=\"ashkelon\">Ashkelon</mat-option>\n                <mat-option value=\"holon\">Holon</mat-option>\n                <mat-option value=\"harish\">Harish</mat-option>\n                <mat-option value=\"hadera\">Hadera</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Street: </mat-label>\n            <input matInput #stBox=\"ngModel\" type=\"text\" name=\"st\" [(ngModel)]=\"user.st\" required [disabled]=\"checkEmail() || checkId() || user.password != user.confirmPassword\"/>\n            <mat-error *ngIf=\"stBox.errors?.required && stBox.touched\">Missing street.</mat-error>\n        </mat-form-field>\n\n        <button mat-stroked-button [disabled]=\"myForm.form.invalid || checkEmail() || checkId() || user.password != user.confirmPassword\">\n            <mat-icon>send</mat-icon>\n            Register\n        </button>\n\n    </form>\n\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}